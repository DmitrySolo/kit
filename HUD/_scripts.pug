script(src='scripts/quant-debug-JsonCss.js')
script(src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js")
script.
	var qscale = function (v) {
		var stepMinus = -(1 - v)*100/2;

		$('#viewpr-content').css({
			"transform": "translate(0,"+v+")",
			"transform": "scale(" + v + ")",
			"position":"relative",
			"top":stepMinus+"%"
		})
		$('#scallerLabel').text(v);
	}
script.
	var frameEl = function (el) {
			return $('iframe#index').contents().find(el)
	},
	frameContent = $('iframe#index').contents().find('body')
script(src="https://cloud9ide.github.io/emmet-core/emmet.js")
script(src='src-noconflict/ace.js')
script(src='src-noconflict/theme-chrome.js')
script
	include ../node_modules/ace-builds/src/ace.js
script
	include ../node_modules/ace-builds/src-min/theme-twilight.js
script
	include ../node_modules/ace-builds/src/ext-emmet.js
script
	include ../node_modules/ace-builds/src/mode-scss.js
script
	include ../node_modules/ace-builds/src/mode-jade.js
script
	include ../node_modules/ace-builds/src/mode-json.js
script
	include quant-debug.js
script
	include viewpr.min.js
script
	include classMaker.js
script
	include ../vendor/Editor Snippets/snippets.js
script
	include ../vendor/Editor Snippets/quantContent.js
script(src='maps/main.css.map' type='text')
script
	include includes/_shortCuts.js
script(src='maps/main.css.map' type='text')

script(role='js')
	include includes/_editors.js
script(src='src-noconflict/ext-language_tools.js')
script(role='scss').
	var editor = ace.edit("editorScss");
	ace.require("ace/ext/language_tools");
	ace.require('ace/multi_select');
	editor.resize(true)
	editor.setTheme("ace/theme/twilight");
	var scssMode = ace.require("ace/mode/scss").Mode;
	editor.session.setMode(new scssMode());
	editor.setOptions({
		enableBasicAutocompletion: true
	});
	// enable emmet on the current editor
		editor.setOption("enableEmmet", true);
	var staticWordCompleter = {
		getCompletions: function(editor, session, pos, prefix, callback) {
			var wordList = ["foo", "bar", "baz"];
			callback(null, wordList.map(function(word) {
				return {
					caption: word,
					value: word,
					meta: "static"
				};
			}));
		}
	}
	editor.resize()
	editor.setOptions({
		enableBasicAutocompletion: true,
		enableSnippets: true,
		enableLiveAutocompletion: true
	});
	var randomSnippetText = "snippet test\n\
		var test = function() {\n\
			return \"test\"\n\
	}\n";
	var session = editor.getSession();


	// Csoncat together the built in extensions quantCon
	var myCustomSnippetText = quantScss;

	session.setMode(new scssMode());
	ace_snippets(editor, session, 'scss',myCustomSnippetText);
script(role='data').
	var editorData = ace.edit("editorData");
		editorData.setTheme("ace/theme/twilight");
		var dataMode = ace.require("ace/mode/json").Mode;
		editorData.session.setMode(new dataMode());
		editorData.session.setOptions({ tabSize: 4, useSoftTabs: false });
			ace.require("ace/ext/language_tools");
				ace.require('ace/multi_select');
			var staticWordCompleter = {
				getCompletions: function(editorPug, session, pos, prefix, callback) {
					var wordList = ["foo", "bar", "baz"];
					callback(null, wordList.map(function(word) {
						return {
							caption: word,
							value: word,
							meta: "static"
						};
					}));
				}
			}
			editorData.setOptions({
				enableBasicAutocompletion: true,
				enableSnippets: true,
				enableLiveAutocompletion: true
			});
script(role='pug').
	var editorPug = ace.edit("editorPug");
	editorPug.setTheme("ace/theme/twilight");
	var PugMode = ace.require("ace/mode/jade").Mode;



	editorPug.session.setMode(new PugMode());
	//editorPug.setShowInvisibles(true)
	editorPug.session.setOptions({ tabSize: 4, useSoftTabs: false });
	ace.require("ace/ext/language_tools");
		ace.require('ace/multi_select');
	var staticWordCompleter = {
		getCompletions: function(editorPug, session, pos, prefix, callback) {
			var wordList = ["foo", "bar", "baz"];
			callback(null, wordList.map(function(word) {
				return {
					caption: word,
					value: word,
					meta: "static"
				};
			}));
		}
	}
	editorPug.setOptions({
		enableBasicAutocompletion: true,
		enableSnippets: true,
		enableLiveAutocompletion: true
	});
	var myCustomSnippetTextPug = quantCon;
		var sessionPug = editorPug.getSession();
		sessionPug.setMode(new PugMode());
		ace_snippets(editorPug, sessionPug, 'jade',myCustomSnippetTextPug);