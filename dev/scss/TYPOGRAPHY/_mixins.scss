// BASED ON Typographic v2.9.2 - https://github.com/corysimmons/typographic
// Ratios

$minor-second   : 1.067;
$major-second   : 1.125;
$minor-third    : 1.2;
$major-third    : 1.25;
$perfect-fourth : 1.333;
$aug-fourth     : 1.414;
$perfect-fifth  : 1.5;
$minor-sixth    : 1.6;
$golden         : 1.618;
$major-sixth    : 1.667;
$minor-seventh  : 1.778;
$major-seventh  : 1.875;
$octave         : 2;
$major-tenth    : 2.5;
$major-eleventh : 2.667;
$major-twelfth  : 3;
$double-octave  : 4;

// Sans-serif

$calibri       : 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif';
$candara       : 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif';
$courier       : 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace';
$franklin      : 'Franklin Gothic Medium', 'Arial', 'sans-serif';
$futura        : 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif';
$geneva        : 'Geneva', 'Tahoma', 'Verdana', 'sans-serif';
$gill-sans     : 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif';
$helvetica     : 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';
$lucida-grande : 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif';
$optima        : 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif';
$segoe         : 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif';
$tahoma        : 'Tahoma', 'Geneva', 'Verdana', 'sans-serif';
$trebuchet     : 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif';
$verdana       : 'Verdana', 'Geneva', 'sans-serif';


// Serif

$antiqua       : 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif';
$baskerville   : 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';
$bodoni        : 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';
$cambria       : 'Cambria', 'Georgia', 'serif';
$caslon        : 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif';
$constantia    : 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif';
$didot         : 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';
$garamond      : 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif';
$goudy         : 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif';
$hoefler       : 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif';
$lucida-bright : 'Lucida Bright', 'Georgia', 'serif';
$palatino      : 'Palatino', 'Palatino Linotype', 'Palatino LT STD', "Book Antiqua", 'Georgia', 'serif';
@mixin t-html() {
  font-family: $body-font;
  font-weight: $body-font-weight;
  color: $body-color;
  font-size: $min-font;
  line-height: #{$line-height-ratio};
  @if $response == true {
    @media (min-width: $min-width) {
      font-size: calc( #{$min-font} + (#{_strip-units($max-font)} - #{_strip-units($min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $max-font;
    }
  }
}

@mixin t-p() {
  @include t-html;
}

@mixin t-reset() {
  margin: 0;
  padding: 0;
}

@mixin t-block() {
  margin-bottom: #{$line-height-ratio}em;
}

@mixin t-header() {
  font-family: $header-font;
  font-weight: $header-font-weight;
  color: $header-color;
  clear: both;
}
@mixin t-h1() {
  $local-min-font: $min-font * (math-pow($header-ratio, 1.75));
  $local-max-font: $max-font * (math-pow($header-ratio, 1.75));

  font-size: $local-min-font;
  @if ($vertical-rhythm) {
    @at-root h1.text, .text h1 {
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25)) + em;}
  } @else {
    margin-top: 0;
    line-height: 1.1em;
    margin-bottom: .25em;
  }
  @if ($response) {
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      @if ($vertical-rhythm) {
        @at-root h1.text, .text h1 {
        margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
        line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
        margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25)) + em;}
      }
    }
  }
}

@mixin t-h2() {
  $local-min-font: $min-font * (math-pow($header-ratio, 1.4));
  $local-max-font: $max-font * (math-pow($header-ratio, 1.4));


  font-size: $local-min-font;
  @if ($vertical-rhythm) {
    @at-root h2.text, .text h2 {
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;
    }
  } @else {
    margin-top: 0;
    line-height: 1.2em;
    margin-bottom: .25em;
  }
  @if ($response) {
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      @if ($vertical-rhythm) {
        @at-root h2.text, .text h2 {
        margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
        line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
        margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;
        }
      }
    }
  }
}

@mixin t-h3() {
  $local-min-font: $min-font * (math-pow($header-ratio, 1.05));
  $local-max-font: $max-font * (math-pow($header-ratio, 1.05));

  font-size: $local-min-font;
  @if ($vertical-rhythm) {
    @at-root h3.text, .text h3 {
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;
    }
  } @else {
    margin-top: 0;
    line-height: 1.3em;
    margin-bottom: .25em;
  }
  @if ($response) {
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      @if ($vertical-rhythm) {
        @at-root h3.text, .text h3 {
        margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
        line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
        margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;}
      }
    }
  }
}

@mixin t-h4() {
  $local-min-font: $min-font * (math-pow($header-ratio, .7));
  $local-max-font: $max-font * (math-pow($header-ratio, .7));

  font-size: $local-min-font;
  @if ($vertical-rhythm) {
    @at-root h4.text, .text h4 {
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;
    }
  } @else {
    margin-top: 0;
    line-height: 1.4em;
    margin-bottom: .25em;
  }
  @if ($response) {
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      @if ($vertical-rhythm) {
        @at-root h4.text, .text h4 {
        margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
        line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
        margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;
        }
      }
    }
  }
}

@mixin t-h5() {
  $local-min-font: $min-font * (math-pow($header-ratio, .35));
  $local-max-font: $max-font * (math-pow($header-ratio, .35));

  font-size: $local-min-font;
  @if ($vertical-rhythm) {
    @at-root h5.text, .text h5 {
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25)) + em;
    }
  } @else {
    margin-top: 0;
    line-height: 1.5em;
    margin-bottom: .25em;
  }
  @if ($response) {
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      @if ($vertical-rhythm) {
        @at-root h5.text, .text h5 {
        margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
        line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
        margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25)) + em;
        }
      }
    }
  }
}

@mixin t-h6() {
  $local-min-font: $min-font;
  $local-max-font: $max-font;

  font-size: $local-min-font;
  @if ($vertical-rhythm) {
    @at-root h6.text, .text h6 {
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (2 / _strip-units($local-min-font)))) + em;
    }
  } @else {
    margin-top: 0;
    line-height: 1.6em;
    margin-bottom: .25em;
  }
  @if ($response) {
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      @if ($vertical-rhythm) {
        @at-root h6.text, .text h6 {
        margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
        line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
        margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (1 / _strip-units($local-min-font)))) + em;
        }
      }
    }
  }
}
@mixin t-blockquote() {
  font-style: italic;
  cite {
    display: block;
    font-style: normal;
  }
}

@mixin t-pre() {
  padding: ($line-height-ratio * .5) + em;
  margin-bottom: vr-block(1);
  code {
    padding: 0;
  }
}

@mixin t-code() {
  font-family: $courier;
  padding: ($line-height-ratio * .05) + em ($line-height-ratio * .15) + em;
  line-height: 0;
}

@mixin t-abbr() {
  border-bottom: 1px dotted currentColor;
  cursor: help;
}

@mixin t-dt() {
  color: $header-color;
  font-weight: bold;
}

@mixin t-fieldset() {
  padding: vr-block(.5) vr-block() vr-block();
  border-width: 1px;
  border-style: solid;
  max-width: 100%;
  @if($response) {
    margin-bottom: vr-block(1, 1);
    @media (min-width: $max-width) {
      margin-bottom: vr-block(1.25, -1);
    }
  }@else{
      margin-bottom: vr-block(1.25, -1);
  }
  button, input[type="submit"] {
    margin-bottom: 0;
  }
}

@mixin t-legend() {
  color: $header-color;
  font-weight: bold;
}

@mixin t-input() {
  $local-min-font: $min-font;
  $local-max-font: $max-font;

  display: block;
  max-width: 100%;
  padding: vr-block(.25);

  font-size: $local-min-font;
  @if ($response) {
    margin-bottom: vr-block(.5, 7);
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-bottom: vr-block(.25, 3.5);
    }
  }@else {
    margin-bottom: vr-block(.25, 3.5);
  }
}

@mixin t-button() {
  $local-min-font: $min-font;
  $local-max-font: $max-font;

  display: block;
  cursor: pointer;

  font-size: $local-min-font;
  padding: vr-block(.25) vr-block();
  @if ($response) {
    margin-bottom: vr-block(.75, -2);
    @media (min-width: $min-width) {
      font-size: calc(#{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})));
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-bottom: vr-block(.75);
    }
  }@else {
    margin-bottom: vr-block(.75);
  }
}

@mixin t-label() {
  display: block;
  padding-bottom: vr-block(.125);
  margin-bottom: vr-block(-.25, -10);
}
@mixin t-table() {
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
  @if ($response) {
    margin-bottom: vr-block(1, 5);
    @media (min-width: $max-width) {
      margin-bottom: vr-block(1, 3);
    }
  }@else{
    margin-bottom: vr-block(1, 3);
  }
}

@mixin t-th() {
  text-align: left;
  color: $header-color;



  @if ($response) {
    padding: vr-block(.125) vr-block(.5);
    @media (min-width: $max-width) {
      padding: vr-block(.25) vr-block(.5);
    }
  }@else {
    padding: vr-block(.25) vr-block(.5);
  }
}

@mixin t-td() {
  padding: ($line-height-ratio * .5) + em;
  @if ($response) {
    padding: vr-block(.125) vr-block(.5);
    @media (min-width: $max-width) {
      padding: vr-block(.25) vr-block(.5);
    }
  }@else {
    padding: vr-block(.25) vr-block(.5);
}
}
