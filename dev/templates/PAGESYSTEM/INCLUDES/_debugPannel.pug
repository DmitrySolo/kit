//Debug Panel
script.
    var evt         = new Event(),
    dragdrop    = new Dragdrop(evt),
    rg          = new RulersGuides(evt, dragdrop);
.editorsContainer.clearfix.notEdit
    #currentSelectorWay.notEdit.clearfix
        div(style='background:#2b2b2b;color: #fff')
            span BODY >
    .editorWrapper
        #editorPug.editor
        #editorScss.editor
        #editorJs.editor
script(src='ace-builds/src/ace.js', type='text/javascript', charset='utf-8')
script(src='ace-builds/src/theme-tomorrow_night_eighties.js', type='text/javascript', charset='utf-8')
script(src='ace-builds/src/mode-scss.js', type='text/javascript', charset='utf-8')
script(src='ace-builds/src/mode-jade.js', type='text/javascript', charset='utf-8')
script(src='ace-builds/src/mode-javascript.js', type='text/javascript', charset='utf-8')
script(src='ace-builds/src/ext-language_tools.js')
script(src='maps/main.css.map')
script(role='scss').
    var editor = ace.edit("editorScss");
    ace.require("ace/ext/language_tools");
    ace.require('ace/multi_select');
    editor.setTheme("ace/theme/tomorrow_night_eighties");
    var scssMode = ace.require("ace/mode/scss").Mode;
    editor.session.setMode(new scssMode());

    var staticWordCompleter = {
        getCompletions: function(editor, session, pos, prefix, callback) {
            var wordList = ["foo", "bar", "baz"];
            callback(null, wordList.map(function(word) {
                return {
                    caption: word,
                    value: word,
                    meta: "static"
                };
            }));
        }
    }
    editor.resize()
    editor.setOptions({
        enableBasicAutocompletion: true,
        enableSnippets: true,
        enableLiveAutocompletion: true
    });
script(role='pug').
    var editorPug = ace.edit("editorPug");
    editorPug.setTheme("ace/theme/tomorrow_night_eighties");
    var PugMode = ace.require("ace/mode/jade").Mode;
    editorPug.session.setMode(new PugMode());

    var staticWordCompleter = {
        getCompletions: function(editorPug, session, pos, prefix, callback) {
            var wordList = ["foo", "bar", "baz"];
            callback(null, wordList.map(function(word) {
                return {
                    caption: word,
                    value: word,
                    meta: "static"
                };
            }));
        }
    }
    editorPug.setOptions({
        enableBasicAutocompletion: true,
        enableSnippets: true,
        enableLiveAutocompletion: true
    });
script(role='js').
    var editorJs = ace.edit("editorJs");
    ace.require("ace/ext/language_tools");
    ace.require('ace/multi_select');
    editorJs.setTheme("ace/theme/tomorrow_night_eighties");
    var JavaScriptMode = ace.require("ace/mode/javascript").Mode;
    editorJs.session.setMode(new JavaScriptMode());

    var staticWordCompleter = {
        getCompletions: function(editorJs, session, pos, prefix, callback) {
            var wordList = ["foo", "bar", "baz"];
            callback(null, wordList.map(function(word) {
                return {
                    caption: word,
                    value: word,
                    meta: "static"
                };
            }));
        }
    }
    editorJs.setOptions({
        enableBasicAutocompletion: true,
        enableSnippets: true,
        enableLiveAutocompletion: true
    });

.debug-Pannel-Right.notEdit
    .debug-Pannel-Right__section.debugPannel__section
        .debug-Pannel-Right-content
            h6 Classes
            div.clearfix
                .col-6-tp
                    label Block
                        input(type='text').classChoser
                    label Element
                        input(type='text').classChoser
                    label Modifier
                        input(type='text').classChoser
                    label Optional
                        input(type='text').classChoser
                .col-6-tp
                    select
                        option Vendor classes
                        option 1
                        option 1
                        option 1
                        option 1
                        option 1
                        option 1
                        option 1
                        option 1
                        option 1
                hr
            h6 Size
            div
                button#100p 100%
                hr
            h6 Text & Font
            div
                button#textAC center
                button#textAL left
                button#textAR right
                hr
            h6 Padding & Margins
            div
                input( type="range" min=".1" max="2" step=".2" list="tickmarks" onchange="padder(this.value)")
                input( type="range" min=".1" max="2" step=".2" list="tickmarks" onchange="padderrl(this.value)")
                input( type="range" min=".1" max="2" step=".1" list="tickmarks" onchange="paddertb(this.value)")
                hr
                input( type="range" min=".1" max="2" step=".2" list="tickmarks" onchange="marginer(this.value)")
                input( type="range" min=".1" max="2" step=".2" list="tickmarks" onchange="marginerrl(this.value)")
                input( type="range" min=".1" max="2" step=".2" list="tickmarks" onchange="marginertb(this.value)")
                datalist#tickmarks
                    option( value=".1" label="e")
                    option( value=".3" label="e+")
                    option( value=".5" label="c")
                    option( value=".7" label="c+")
                    option( value=".9" label="m")
                    option( value="1.1" label="m+")
                    option( value="1.3" label="b")
                    option( value="1.5" label="b+")

.debug.notEdit
    .hidden
        include   ../../../../vendor/icons/icons-debug.svg
    section.mediaMap(style="height:50px;")
        .mediaMap__bounder.dl
            .mediaMap__container.dl
        .mediaMap__bounder.d(style="width:"+MEDIA.desktopBreakpoint)
            span=MEDIA.desktopBreakpoint
            .mediaMap__container.d(style="width:"+MEDIA.desktopContainer)
                span=MEDIA.desktopContainer
        .mediaMap__bounder.tl(style="width:"+MEDIA.tabletLandscapeBreakpoint)
            span=MEDIA.tabletLandscapeBreakpoint
            .mediaMap__container.tl(style="width:"+MEDIA.tabletLcontainer)
                span=MEDIA.tabletLcontainer
        .mediaMap__bounder.tp(style="width:"+MEDIA.tabletPortraitBreakpoint)
            span=MEDIA.tabletPortraitBreakpoint
            .mediaMap__container.tp(style="width:"+MEDIA.tabletPcontainer)
                span=MEDIA.tabletPcontainer
        .mediaMap__bounder.m(style="width:"+MEDIA.phoneBreakpoint+"; color:#27ae60;",)
            span=MEDIA.phoneBreakpoint
            .mediaMap__container.m(style="width:100%; background:#27ae60;")
                span=MEDIA.phoneBreakpoint
                .mediaInfo.clearfix
                    +I('arrow','icon-breakpoits')
                    #widthOf.f-left
                    #viewpr-list.f-left
    section.pb-section.clearfix#ball.hidden
        span.lh Line height
        .spacer.element-i
            span Element i
        .spacer.element-o
            span Element o
        .spacer.component-i
            span Component i
        .spacer.component-o
            span Component o
        .spacer.module-i
            span Module ii
        .spacer.module-o
            span Module o
        .spacer.block-i
            span block i
        .spacer.block-o
            span block o
    section.pb-section.clearfix.grid.grid--debug.hidden#grid
        .container
            .row
                .col-1-m.col-1-tp 1
                .col-1-m.col-1-tp 2
                .col-1-m.col-1-tp 3
                .col-1-m.col-1-tp 4
                .col-1-m.col-1-tp 5
                .col-1-m.col-1-tp 6
                .col-1-m.col-1-tp 7
                .col-1-m.col-1-tp 8
                .col-1-m.col-1-tp 9
                .col-1-m.col-1-tp 10
                .col-1-m.col-1-tp 11
                .col-1-m.col-1-tp 12
    .debugPannel__wrapper.notEdit
        .debugPannel.clearfix
            .debugPannel__section.col-4-tp
                .tabList.elAdder
                    div#tabs-add-elment
                        ul.panellInner
                            li
                                a.tabAnchr( href=""+"#tabtags" ) Tags
                            li
                                a.tabAnchr( href="" + '#tabHTML5' ) HTML5
                            li
                                a.tabAnchr( href=""+'#tabclass' ) Classes
                            li
                                a.tabAnchr(href=""+'#tabcombination') Combinations
                        div#tabtags
                            ul.debugPannel__colorSpecific
                                .clearfix
                                    li.col-1-tp Bl:
                                    li.headers#addHeader.col-1-tp.elAdder(data-el='<h1></h1><h2></h2><h3></h3><h4></h4><h5></h5><h6></h6>') H1+
                                    li.col-1-tp.prgrph.elAdder(data-el='p') P
                                    li.col-1-tp.ul.elAdder(data-el='<ul></ul>') ul
                                    li.col-1-tp.li.elAdder(data-el='<li> the li element </li>') li
                                    li.col-1-tp.div.elAdder(data-el='<div></div>') div
                                    li.col-1-tp.main.elAdder(data-el='<main></main>') main
                                    li.col-1-tp.nav.elAdder(data-el='<nav><nav>') nav
                                    li.col-1-tp.tbl.elAdder(data-el='<table></table>') tbl
                                    li.col-1-tp.dl.elAdder(data-el='<dl></dl>') dl
                                    li.col-1-tp.dt.elAdder(data-el='<dt></dt>') dt
                                    li.col-1-tp.dd.elAdder(data-el='<dd></dd>') dd
                                    li.col-1-tp
                                    li.col-1-tp.blockquote.elAdder(data-el='<blockquote></blockquote>') blqt
                                    li.col-1-tp.form.elAdder(data-el='<form></form>') form
                                .clearfix
                                    li.col-1-tp Inl:
                                    li.col-1-tp.span.elAdder(data-el='<span> Span Text</span>') span
                                    li.col-1-tp.link.elAdder(data-el='<a>this is link</a>') a
                                    li.col-1-tp.i.elAdder(data-el='<i>italic</i>') i
                                    li.col-1-tp.input.elAdder(data-el='<input>') inpt
                                    li.col-1-tp.button.elAdder(data-el='<button>Button</button>') btn
                                    li.col-1-tp.cite.elAdder(data-el='<cite></cite>') cite
                                    li.col-1-tp.select.elAdder(data-el='<select></select>') select
                                    li.col-1-tp.label.elAdder(data-el='<label></label>') label
                                    li.col-1-tp.textarea.elAdder(data-el='<textarea>') txta
                                    li.col-1-tp.tr.elAdder(data-el='<tr></tr>') tr
                                    li.col-1-tp.td.elAdder(data-el='<td></td>') td
                                    li.col-1-tp
                                    li.col-1-tp.th.elAdder(data-el='<thead></thead>') th
                        div#tabHTML5
                            ul.debugPannel__colorSpecific
                                .clearfix
                                    li.col-1-tp.header.elAdder(data-el='<header></header>') Hdr
                                    li.col-1-tp.footer.elAdder(data-el='<footer></footer>') Ftr
                                    li.col-1-tp.article.elAdder(data-el='<article></article>') arcl
                                    li.col-1-tp.aside.elAdder(data-el='<aside></aside>') aside
                                    li.col-1-tp.section.elAdder(data-el='<section></section>') sectn
                                    li.col-1-tp.figure.elAdder(data-el='<figure></figure>') figure
                                    li.col-1-tp.figcaption.elAdder(data-el='<figcaption></figcaption>') figcpt
                        div#tabclass
                            ul.debugPannel__colorSpecific
                                li span

                                li a
                                    span(style={
                                        display: 'inline-block',
                                        width: '100%',
                                        "text-shadow": "1px 1px 1px black"
                                    }) Span
                                li
                                    img(alt='img/svg',style={
                                        display: 'inline-flex',
                                        "vertical-align": 'middle',
                                        "text-shadow": "1px 1px 1px black"
                                    })
                                li
                                    div Div
                        div#tabcombination
                            ul.debugPannel__colorSpecific
                                li.headers
                                    h6(style={
                                        margin: '0',
                                        "font-size": '1rem',
                                        "font-weight": '400',
                                        "text-shadow": "1px 1px 1px black"
                                    }) h1-h6
                                li
                                    p  P
                                li
                                    ul  ul
                                li
                                    li li
                                li
                                    .col-  .Col
                                li
                                    a(style={
                                        display: 'inline-block',
                                        width: '100%',
                                        "text-shadow": "1px 1px 1px black"
                                    }) A
                                li
                                    span(style={
                                        display: 'inline-block',
                                        width: '100%',
                                        "text-shadow": "1px 1px 1px black"
                                    }) Span
                                li
                                    img(alt='img/svg',style={
                                        display: 'inline-flex',
                                        "vertical-align": 'middle',
                                        "text-shadow": "1px 1px 1px black"
                                    })
                                li
                                    div Div
                script.
                    $("#tabs-add-elment").tabs();

            .debugPannel__section.col-4-tp
                button#spacerSwitcher Spacer
                button#gridb grid
                button#debugViewSwitcher.on Debug View
                button#clone Clone
                button#getHtml Get View!
                button#up Up
                button#down Down
                button#del Delete
                button#lock Lock
                button#unlock UnLock
                button#save Save
                button#load Load
                button#lockSpacer lock Spacer
                button#addBkg add Background
                button#startMediaTest Media
                button#getScssCode Get scss
                button#getinnerView Get Html
                a.tabAnchr(href="javascript:onclick=maximizeme()") Maximize
                script.
                    var qscale = function (v) {
                        $('main').css({
                            "transform": "scale(" + v + ")"
                        })
                    }
                input#scaller( type="range" min=".3" max="2" step=".1"  onchange="qscale(this.value)")
                #editableDiv(contenteditable='true') Paste
            .debugPannel__section.col-4-tp.colors
                    .pb-element.f-left
                        .pb-colorBox
                        .pb-colorBox
                            span.pb-elementHeader Base
                        .pb-colorBox
                            span.pb-elementHeader Darken
                        .pb-colorBox
                            span.pb-elementHeader light
                    .pb-element.f-left
                        span.pb-elementHeader 1
                        .pb-colorBox.pb-colorBox--primary
                        .pb-colorBox.pb-colorBox--primary-d
                        .pb-colorBox.pb-colorBox--primary-l
                    .pb-element.f-left
                        span.pb-elementHeader 2
                        .pb-colorBox.pb-colorBox--secondary
                        .pb-colorBox.pb-colorBox--secondary-d
                        .pb-colorBox.pb-colorBox--secondary-l
                    .pb-element.f-left
                        span.pb-elementHeader A
                        .pb-colorBox.pb-colorBox--accent
                        .pb-colorBox.pb-colorBox--accent-d
                        .pb-colorBox.pb-colorBox--accent-l
                    .pb-element.f-left
                        span.pb-elementHeader Fg
                        .pb-colorBox.pb-colorBox--fground
                        .pb-colorBox.pb-colorBox--fground-d
                        .pb-colorBox.pb-colorBox--fground-l
                    .pb-element.f-left
                        span.pb-elementHeader Bg
                        .pb-colorBox.pb-colorBox--bground
                        .pb-colorBox.pb-colorBox--bground-d
                        .pb-colorBox.pb-colorBox--bground-l
                    .pb-element.f-left
                        span.pb-elementHeader F
                        .pb-colorBox.pb-colorBox--font
                        .pb-colorBox.pb-colorBox--font-d
                        .pb-colorBox.pb-colorBox--font-l
                    .pb-element.f-left
                        span B
                            input(id='colorPicker',type='color')
                        span C
                            input(id='colorPickerFont',type='color')
            .debugPannel__section.hidden
                span#phone-upper-boundary= MEDIA.phoneBreakpoint
                span#tablet-portrait-upper-boundary=MEDIA.tabletPortraitBreakpoint
                span#tablet-landscape-upper-boundary=MEDIA.tabletLandscapeBreakpoint
                span#desktop-upper-boundary=MEDIA.desktopBreakpoint
                span#desktopl-upper-boundary=MEDIA.desktoplBreakpoint
                span#tablet-p-container=MEDIA.tabletPcontainer
                span#tablet-l-container=MEDIA.tabletLcontainer
                span#desktop-container=MEDIA.desktopContainer
